====================
comments
====================

# This is a comment.

/*
This is also a comment.
*/

"This is a string."

---

(source_expression (comment) (comment) (string))

====================
identifier
====================

abc

---

(source_expression (identifier))

====================
integer
====================

123

---

(source_expression (integer))

====================
float
====================

123.456

---

(source_expression (float))

====================
array (empty)
====================

[ ]

---

(source_expression (array))

====================
array
====================

[ a 1 2.0 ]

---

(source_expression (array (identifier) (integer) (float)))

====================
if
====================

if a then b else c

---

(source_expression (if (identifier) (identifier) (identifier)))

====================
let (empty)
====================

let in a

---

(source_expression (let (identifier)))

====================
let (bind)
====================

let a = b in c

---

(source_expression
    (let
        (bind
            (attrpath (attr_identifier))
            (identifier))
        (identifier)))

====================
let (bind, comments)
====================

let
  # foo
  a = b
  # bar
  in
    # baz
    c

---

(source_expression
    (let
        (comment)
        (bind (attrpath (attr_identifier)) (identifier))
        (comment)
        (bind (attrpath (attr_identifier)) (identifier))
        (comment)
        (identifier)))

====================
function
====================

fun a => b

---

(source_expression (function (identifier) (identifier)))

====================
let record (empty)
====================

let { }

---

(source_expression (let_attrset))

====================
record (empty)
====================

{ }

---

(source_expression (record))

====================
record
====================

{ a = 1, %{b} = "quux", "c" = 3.14, x.y.z = "foo" }

---

(source_expression
    (record
        (bind (attrpath (attr_identifier)) (integer))
        (bind (attrpath (interpolation (identifier))) (string))
        (bind (attrpath (string)) (float))
        (bind (attrpath (attr_identifier) (attr_identifier) (attr_identifier)) (string))))

====================
select
====================

u.v.%{w}."x%{y}z"

---

(source_expression
    (select
        (identifier)
        (attrpath
            (attr_identifier)
            (interpolation (identifier))
            (string (interpolation (identifier))))))

====================
apply
====================

a 1 2.0

---

(source_expression
    (app
        (app
            (identifier)
            (integer))
        (float)))

====================
operators
====================

square 2 + -pi - 42.0

---

(source_expression
    (binary
        (binary
            (app (identifier) (integer))
            (unary (identifier)))
        (float)))

====================
parens
====================

(123)

---

(source_expression
    (parenthesized (integer)))
