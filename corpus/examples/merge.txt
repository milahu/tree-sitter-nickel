================================================================================
main.ncl
================================================================================

# Merge several blocks into one final configuration. In a real world case, one
# would also want contracts to validate the shape of the data.
let server = import "server.ncl" in
let security = import "security.ncl" in
# Disabling firewall in the final result
server & security & {firewall.enabled = false}

--------------------------------------------------------------------------------

(source_expression
  (comment)
  (comment)
  (let
    (bind
      (attrpath
        (attr_identifier))
      (App
        (Id)
        (Str
          (StrChunk
            (StrChunkLiteral)))))
    (let
      (bind
        (attrpath
          (attr_identifier))
        (App
          (Id)
          (Str
            (StrChunk
              (StrChunkLiteral)))))
      (comment)
      (BinaryOp
        (Id)
        (BinaryOp
          (Id)
          (Record
            (bind
              (attrpath
                (attr_identifier)
                (attr_identifier))
              (Bool))))))))

================================================================================
server.ncl
================================================================================

{
  server.host.ip = "182.168.1.1",
  server.host.port = 80,
  server.host.name = "hello-world.net",
}

--------------------------------------------------------------------------------

(source_expression
  (Record
    (bind
      (attrpath
        (attr_identifier)
        (attr_identifier)
        (attr_identifier))
      (Str
        (StrChunk
          (StrChunkLiteral))))
    (bind
      (attrpath
        (attr_identifier)
        (attr_identifier)
        (attr_identifier))
      (Num))
    (bind
      (attrpath
        (attr_identifier)
        (attr_identifier)
        (attr_identifier))
      (Str
        (StrChunk
          (StrChunkLiteral))))))

================================================================================
security.ncl
================================================================================

{
  server.host.options = "TLS",

  firewall.enabled | default = true,
  firewall.type = "iptables",
  firewall.open_ports = [21, 80, 443],
}

--------------------------------------------------------------------------------

(term
  (uni_term
    (infix_expr
      (applicative
        (record_operand
          (atom
            (uni_record
              (record_field
                (field_path
                  (field_path_elem
                    (ident))
                  (field_path_elem
                    (ident))
                  (field_path_elem
                    (ident)))
                (term
                  (uni_term
                    (infix_expr
                      (applicative
                        (record_operand
                          (atom
                            (str_chunks
                              (str_chunks_single
                                (chunk_literal))))))))))
              (record_field
                (field_path
                  (field_path_elem
                    (ident))
                  (field_path_elem
                    (ident)))
                (annot
                  (annot_atom))
                (term
                  (uni_term
                    (infix_expr
                      (applicative
                        (record_operand
                          (atom
                            (bool))))))))
              (record_field
                (field_path
                  (field_path_elem
                    (ident))
                  (field_path_elem
                    (ident)))
                (term
                  (uni_term
                    (infix_expr
                      (applicative
                        (record_operand
                          (atom
                            (str_chunks
                              (str_chunks_single
                                (chunk_literal))))))))))
              (record_field
                (field_path
                  (field_path_elem
                    (ident))
                  (field_path_elem
                    (ident)))
                (term
                  (uni_term
                    (infix_expr
                      (applicative
                        (record_operand
                          (atom
                            (term
                              (uni_term
                                (infix_expr
                                  (applicative
                                    (record_operand
                                      (atom
                                        (num_literal)))))))
                            (term
                              (uni_term
                                (infix_expr
                                  (applicative
                                    (record_operand
                                      (atom
                                        (num_literal)))))))
                            (term
                              (uni_term
                                (infix_expr
                                  (applicative
                                    (record_operand
                                      (atom
                                        (num_literal)))))))))))))))))))))
